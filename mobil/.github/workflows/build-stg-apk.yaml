name: Build Staging APK and Upload to Firebase App Distribution

on:
  release:
    types:
      - published
permissions: { contents: write, pull-requests: write }
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "21.x"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: 3.19.2
      - name: Decode and Save Keystore
        env:
          ENCODED_KEYSTORE_STG: ${{ secrets.ENCODED_KEYSTORE_STG }}
        run: |
          echo "$ENCODED_KEYSTORE_STG"==== | fold -w 4 | sed '$ d' | tr -d '\n' | base64 --decode > android/app/mykey-stg.jks
      - name: Create .env-var directory and create stg.json file
        env:
          BASEURL: ${{ secrets.BASE_URL_STG }}
          ENV: ${{ secrets.ENV_STG }}
          GOOGLE_SERVER_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_KEY_STG }}
        run: |
          mkdir .env-var
          echo "{\"base-url\":\"$BASEURL\",\"env\":\"$ENV\",\"google-server-client-key\":\"$GOOGLE_SERVER_CLIENT_ID\"}" > .env-var/staging.json
      - name: Install Dependencies
        run: flutter pub get
      - name: Build Apk
        run: flutter build apk --flavor staging -t lib/main_staging.dart --dart-define-from-file .env-var/staging.json
      - name: Create changelog.txt
        run: |
          echo "${{ github.event.release.body }}" > changelog.txt
      - run: ls build/app/outputs/flutter-apk
      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{ secrets.FIREBASE_APP_ID_STG }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testing
          releaseNotesFile: changelog.txt
          file: build/app/outputs/flutter-apk/app-staging-release.apk
          debug: false
      - name: Get the release tag
        id: get_release_tag
        run: echo "RELEASE_TAG=$(echo ${{ github.event.release.tag_name }} | sed -e 's/^v//')" >> $GITHUB_ENV
      - name: Create a release branch
        run: |
          git checkout -b release/$RELEASE_TAG
          git push origin release/$RELEASE_TAG
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
